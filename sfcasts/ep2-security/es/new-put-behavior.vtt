WEBVTT

00:00:01.166 --> 00:00:06.656 align:middle
Busca tu terminal y borra manualmente el
directorio de caché: Lo hago para que,

00:00:06.826 --> 00:00:12.076 align:middle
al ejecutar todas nuestras pruebas, aparezca una
advertencia de desaprobación, que es fascinante.

00:00:12.646 --> 00:00:19.906 align:middle
Dice Desde API Platform 3.1: en API Platform
4, PUT siempre sustituirá a los datos.

00:00:20.226 --> 00:00:24.886 align:middle
establece extraProperties["standard_put"]
en true en cada operación

00:00:24.946 --> 00:00:26.916 align:middle
para evitar romper el comportamiento de PUT.

00:00:27.206 --> 00:00:29.606 align:middle
Utiliza PATCH para el comportamiento antiguo.

00:00:30.376 --> 00:00:32.656 align:middle
Vale... ¿qué significa eso?

00:00:33.246 --> 00:00:38.976 align:middle
Ahora mismo, significa que nada ha cambiado: nuestra
operación PUT se comporta como siempre lo ha hecho.

00:00:39.506 --> 00:00:45.266 align:middle
Pero, en la API Platform 4, el
comportamiento de PUT cambiará radicalmente.

00:00:45.796 --> 00:00:51.026 align:middle
Y, en algún momento entre ahora y entonces,
tenemos que optar por ese nuevo comportamiento

00:00:51.236 --> 00:00:55.206 align:middle
para que no se rompa de repente cuando
actualicemos a la versión 4 en el futuro.

00:00:55.856 --> 00:00:57.546 align:middle
¿Qué va a cambiar exactamente?

00:00:58.136 --> 00:01:00.266 align:middle
Ve a los documentos de la API y actualízalos.

00:01:00.756 --> 00:01:02.306 align:middle
Utiliza la ruta GET...

00:01:02.896 --> 00:01:05.796 align:middle
y pulsa "Ejecutar", para que
podamos obtener un ID válido.

00:01:06.666 --> 00:01:08.946 align:middle
Genial: tenemos un tesoro con el ID 1.

00:01:09.666 --> 00:01:13.326 align:middle
Ahora mismo, si enviamos una
petición a PUT con este ID,

00:01:13.686 --> 00:01:17.956 align:middle
podemos enviar sólo un campo
para actualizar sólo esa cosa.

00:01:18.806 --> 00:01:22.496 align:middle
Por ejemplo, podemos enviar
description para cambiar sólo eso.

00:01:23.226 --> 00:01:27.176 align:middle
Ah, pero antes de Ejecutar esto,
necesitamos haber iniciado sesión.

00:01:27.556 --> 00:01:30.666 align:middle
En mi otra pestaña, rellenaré el
formulario de inicio de sesión.

00:01:31.366 --> 00:01:34.426 align:middle
Perfecto. Ahora ejecuta la operación PUT.

00:01:35.286 --> 00:01:40.416 align:middle
Sí: pasamos sólo el campo description,
y sólo actualiza el campo description:

00:01:40.656 --> 00:01:42.726 align:middle
todos los demás campos permanecen igual.

00:01:43.466 --> 00:01:48.916 align:middle
Vaya, resulta que no es así
como se supone que funciona PUT

00:01:48.916 --> 00:01:54.556 align:middle
según la especificación HTTP. PUT se supone
que es un "reemplazo". Lo que quiero decir

00:01:55.336 --> 00:02:01.156 align:middle
es que, si enviamos sólo un campo,
se supone que la operación PUT toma

00:02:01.156 --> 00:02:07.216 align:middle
ese nuevo recurso -que es sólo el único
campo- y sustituye al recurso existente. Es

00:02:07.626 --> 00:02:13.546 align:middle
una forma complicada de decir que, al utilizar
PUT, tienes que enviar todos los campos,

00:02:13.946 --> 00:02:15.806 align:middle
incluso los que no cambian.

00:02:16.236 --> 00:02:18.236 align:middle
De lo contrario, se establecerán en null.

00:02:18.756 --> 00:02:21.206 align:middle
Si te parece una locura, estoy de acuerdo,

00:02:21.836 --> 00:02:25.156 align:middle
pero hay razones técnicas
válidas para que sea así. La

00:02:25.776 --> 00:02:29.156 align:middle
cuestión es que: así es como
se supone que funciona PUT

00:02:29.296 --> 00:02:33.186 align:middle
y en la API Platform 4, así
es como funcionará PUT.

00:02:33.716 --> 00:02:36.146 align:middle
Sinceramente, hace que PUT sea menos útil.

00:02:36.466 --> 00:02:41.146 align:middle
Así que te darás cuenta de que en adelante
utilizaré casi exclusivamente PATCH.

00:02:41.636 --> 00:02:46.316 align:middle
Así que nos guste o no, en algún
momento entre ahora y la API Platform 4,

00:02:46.626 --> 00:02:49.786 align:middle
tenemos que decirle a la API
Platform que está bien que

00:02:49.786 --> 00:02:52.716 align:middle
cambie el comportamiento
de PUT a la "nueva" forma.

00:02:53.356 --> 00:02:59.056 align:middle
Hagámoslo ahora añadiendo algo de configuración extra
a cada atributo ApiResource de nuestra aplicación.

00:02:59.816 --> 00:03:02.706 align:middle
Abre src/Entity/DragonTreasure.php...

00:03:02.706 --> 00:03:07.036 align:middle
y añade una nueva opción llamada
extraProperties ajustada a una matriz

00:03:07.396 --> 00:03:11.346 align:middle
con standard_put ajustada a true: ¡Eso es!

00:03:11.686 --> 00:03:12.406 align:middle
Copia eso...

00:03:12.776 --> 00:03:17.276 align:middle
porque vamos a necesitarlo aquí
abajo en este ApiResource...

00:03:17.596 --> 00:03:22.356 align:middle
aunque no tenga una operación
PUT: Luego, en User,

00:03:23.016 --> 00:03:26.556 align:middle
añádelo también a los
dos puntos de ApiResource:

00:03:26.556 --> 00:03:34.316 align:middle
Ahora, cuando ejecutemos nuestras pruebas,
¡la desaprobación habrá desaparecido!

00:03:34.846 --> 00:03:39.376 align:middle
No estamos utilizando la operación PUT en
ninguna prueba, así que todo sigue pasando. Para

00:03:40.096 --> 00:03:46.226 align:middle
ver el nuevo comportamiento, prueba de nuevo la
ruta PUT: sigue enviando sólo un campo. Esta vez...

00:03:47.756 --> 00:03:48.426 align:middle
¡fíjate

00:03:48.836 --> 00:03:49.696 align:middle
! ¡ Un

00:03:49.696 --> 00:03:52.226 align:middle
error de validación 422! Todos los

00:03:52.606 --> 00:03:56.176 align:middle
campos que no incluimos se
establecieron como nulos... y

00:03:56.636 --> 00:03:58.666 align:middle
eso provocó el fallo de
validación. Así que...

00:03:59.346 --> 00:04:02.226 align:middle
esto hace que PUT sea un poco menos útil... y

00:04:02.476 --> 00:04:05.036 align:middle
nos apoyaremos mucho más en PATCH. Si

00:04:05.666 --> 00:04:10.386 align:middle
ya no quieres tener una operación
PUT, tiene mucho sentido. Una

00:04:10.896 --> 00:04:16.836 align:middle
cosa única del nuevo comportamiento PUT es que
podrías utilizarlo para crear nuevos objetos... lo que

00:04:17.126 --> 00:04:20.006 align:middle
podría ser útil en
algunos casos extremos... o

00:04:20.416 --> 00:04:25.526 align:middle
una absoluta pesadilla desde el punto de vista de la
seguridad, ya que ahora tenemos que preocuparnos de que

00:04:25.526 --> 00:04:30.536 align:middle
se editen o creen objetos mediante la
misma operación PUT. Por eso, a medida que

00:04:31.156 --> 00:04:36.866 align:middle
avancemos, me verás eliminar la operación
PUT en algunos casos. A continuación:

00:04:37.726 --> 00:04:41.326 align:middle
pongámonos más complejos con la
seguridad asegurándonos de que

00:04:41.326 --> 00:04:45.206 align:middle
un DragonTreasure sólo puede
ser editado por su propietario.
