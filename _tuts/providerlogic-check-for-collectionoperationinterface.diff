diff --git a/src/State/UserApiStateProvider.php b/src/State/UserApiStateProvider.php
index adc1d31..c634ed1 100644
--- a/src/State/UserApiStateProvider.php
+++ b/src/State/UserApiStateProvider.php
@@ -2,6 +2,7 @@
 
 namespace App\State;
 
+use ApiPlatform\Metadata\CollectionOperationInterface;
 use ApiPlatform\Doctrine\Orm\Paginator;
 use ApiPlatform\Doctrine\Orm\State\CollectionProvider;
 use ApiPlatform\Metadata\Operation;
@@ -22,20 +23,24 @@ class UserApiStateProvider implements ProviderInterface
 
     public function provide(Operation $operation, array $uriVariables = [], array $context = []): object|array|null
     {
-        $users = $this->collectionProvider->provide($operation, $uriVariables, $context);
-        assert($users instanceof Paginator);
-
-        $userDtos = [];
-        foreach ($users as $user) {
-            $userDtos[] = $this->mapEntityToDto($user);
+        if ($operation instanceof CollectionOperationInterface) {
+            $users = $this->collectionProvider->provide($operation, $uriVariables, $context);
+            assert($users instanceof Paginator);
+
+            $userDtos = [];
+            foreach ($users as $user) {
+                $userDtos[] = $this->mapEntityToDto($user);
+            }
+
+            return new TraversablePaginator(
+                new \ArrayIterator($userDtos),
+                $users->getCurrentPage(),
+                $users->getItemsPerPage(),
+                $users->getTotalItems()
+            );
         }
 
-        return new TraversablePaginator(
-            new \ArrayIterator($userDtos),
-            $users->getCurrentPage(),
-            $users->getItemsPerPage(),
-            $users->getTotalItems()
-        );
+        dd($uriVariables);
     }
 
     private function mapEntityToDto(User $user): UserApi
