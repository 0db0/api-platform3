diff --git a/src/State/EntityClassDtoStateProvider.php b/src/State/EntityClassDtoStateProvider.php
index 4836672c..ef19fd66 100644
--- a/src/State/EntityClassDtoStateProvider.php
+++ b/src/State/EntityClassDtoStateProvider.php
@@ -2,6 +2,7 @@
 
 namespace App\State;
 
+use ApiPlatform\Metadata\CollectionOperationInterface;
 use ApiPlatform\Doctrine\Orm\Paginator;
 use ApiPlatform\Doctrine\Orm\State\CollectionProvider;
 use ApiPlatform\Metadata\Operation;
@@ -21,20 +22,24 @@ class EntityClassDtoStateProvider implements ProviderInterface
 
     public function provide(Operation $operation, array $uriVariables = [], array $context = []): object|array|null
     {
-        $entities = $this->collectionProvider->provide($operation, $uriVariables, $context);
-        assert($entities instanceof Paginator);
-
-        $dtos = [];
-        foreach ($entities as $entity) {
-            $dtos[] = $this->mapEntityToDto($entity);
+        if ($operation instanceof CollectionOperationInterface) {
+            $entities = $this->collectionProvider->provide($operation, $uriVariables, $context);
+            assert($entities instanceof Paginator);
+
+            $dtos = [];
+            foreach ($entities as $entity) {
+                $dtos[] = $this->mapEntityToDto($entity);
+            }
+
+            return new TraversablePaginator(
+                new \ArrayIterator($dtos),
+                $entities->getCurrentPage(),
+                $entities->getItemsPerPage(),
+                $entities->getTotalItems()
+            );
         }
 
-        return new TraversablePaginator(
-            new \ArrayIterator($dtos),
-            $entities->getCurrentPage(),
-            $entities->getItemsPerPage(),
-            $entities->getTotalItems()
-        );
+        dd($uriVariables);
     }
 
     private function mapEntityToDto(object $entity): object
