diff --git a/src/Security/Voter/DragonTreasureVoter.php b/src/Security/Voter/DragonTreasureVoter.php
index 8f1301f..2bd6f67 100644
--- a/src/Security/Voter/DragonTreasureVoter.php
+++ b/src/Security/Voter/DragonTreasureVoter.php
@@ -2,25 +2,24 @@
 
 namespace App\Security\Voter;
 
+use App\Entity\DragonTreasure;
 use Symfony\Component\Security\Core\Authentication\Token\TokenInterface;
 use Symfony\Component\Security\Core\Authorization\Voter\Voter;
 use Symfony\Component\Security\Core\User\UserInterface;
 
 class DragonTreasureVoter extends Voter
 {
-    public const EDIT = 'POST_EDIT';
-    public const VIEW = 'POST_VIEW';
+    public const EDIT = 'EDIT';
 
     protected function supports(string $attribute, mixed $subject): bool
     {
-        // replace with your own logic
-        // https://symfony.com/doc/current/security/voters.html
-        return in_array($attribute, [self::EDIT, self::VIEW])
-            && $subject instanceof \App\Entity\DragonTreasure;
+        return in_array($attribute, [self::EDIT])
+            && $subject instanceof DragonTreasure;
     }
 
     protected function voteOnAttribute(string $attribute, mixed $subject, TokenInterface $token): bool
     {
+        return false;
         $user = $token->getUser();
         // if the user is anonymous, do not grant access
         if (!$user instanceof UserInterface) {
@@ -33,10 +32,6 @@ class DragonTreasureVoter extends Voter
                 // logic to determine if the user can EDIT
                 // return true or false
                 break;
-            case self::VIEW:
-                // logic to determine if the user can VIEW
-                // return true or false
-                break;
         }
 
         return false;
