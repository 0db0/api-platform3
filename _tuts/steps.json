{
    "steps": [
        {
            "id": "start",
            "name": "start",
            "description": null
        },
        {
            "id": "docs-enable-docs-false",
            "name": "Docs: enable_docs: false",
            "description": null
        },
        {
            "id": "docs-enable-entrypoint-false",
            "name": "Docs: enable_entrypoint: false",
            "description": null
        },
        {
            "id": "docs-enable-swagger-false",
            "name": "Docs: enable_swagger: false",
            "description": null
        },
        {
            "id": "docs-enable-swagger-ui-false",
            "name": "Docs: enable_swagger_ui: false",
            "description": null
        },
        {
            "id": "docs-disable-html-format",
            "name": "Docs: disable html format",
            "description": null
        },
        {
            "id": "docs-reenable-everything",
            "name": "Docs: Reenable everything",
            "description": null
        },
        {
            "id": "json-login-securitycontroller-with-login-route",
            "name": "json_login: SecurityController with login route",
            "description": null
        },
        {
            "id": "json-login-return-user-id",
            "name": "json_login: return user id",
            "description": null
        },
        {
            "id": "json-login-activate-in-the-firewall",
            "name": "json_login: Activate in the firewall",
            "description": null
        },
        {
            "id": "json-login-add-username-and-password-paths",
            "name": "json_login: Add username and password paths",
            "description": null
        },
        {
            "id": "auth-error-set-error-var-in-vue",
            "name": "Auth Error: set error var in Vue",
            "description": null
        },
        {
            "id": "auth-error-comment-out-content-type",
            "name": "Auth Error: Comment-out Content-Type",
            "description": null
        },
        {
            "id": "auth-error-return-401-is-header-is-missing",
            "name": "Auth Error: return 401 is header is missing",
            "description": null
        },
        {
            "id": "auth-error-put-header-back",
            "name": "Auth Error: Put header back",
            "description": null
        },
        {
            "id": "auth-success-return-iri-from-login",
            "name": "Auth Success: Return IRI from login",
            "description": null
        },
        {
            "id": "auth-success-emit-event-in-vue",
            "name": "Auth Success: emit event in Vue",
            "description": null
        },
        {
            "id": "logout-adding-logout-route",
            "name": "Logout: Adding logout route",
            "description": null
        },
        {
            "id": "logout-add-logout-to-firewall",
            "name": "Logout: Add logout to firewall",
            "description": null
        },
        {
            "id": "userinjs-set-global-user-variable",
            "name": "UserInJS: Set global user variable",
            "description": null
        },
        {
            "id": "userinjs-be-explicit-with-group-name",
            "name": "UserInJS: Be explicit with group name",
            "description": null
        },
        {
            "id": "userinjs-use-window-user",
            "name": "UserInJS: Use window.user",
            "description": null
        },
        {
            "id": "userinjs-try-to-pass-user-into-vue",
            "name": "UserInJS: Try to pass User into Vue",
            "description": null
        },
        {
            "id": "userinjs-normalize-in-controller",
            "name": "UserInJS: Normalize in controller",
            "description": null
        },
        {
            "id": "userinjs-remove-the-console-log",
            "name": "UserInJS: Remove the console.log()",
            "description": null
        },
        {
            "id": "apitoken-make-entity",
            "name": "ApiToken: make:entity",
            "description": null
        },
        {
            "id": "apitoken-generate-token-in-constructor",
            "name": "ApiToken: Generate token in constructor",
            "description": null
        },
        {
            "id": "apitoken-generate-migration",
            "name": "ApiToken: generate migration",
            "description": null
        },
        {
            "id": "apitoken-make-factory",
            "name": "ApiToken: make:factory",
            "description": null
        },
        {
            "id": "apitoken-tweak-factory",
            "name": "ApiToken: Tweak factory",
            "description": null
        },
        {
            "id": "apitoken-add-fixtures",
            "name": "ApiToken: Add fixtures",
            "description": null
        },
        {
            "id": "apitoken-send-tokens-to-frontend",
            "name": "ApiToken: Send tokens to frontend",
            "description": null
        },
        {
            "id": "tokenauth-add-api-token-to-firewall",
            "name": "TokenAuth: Add api_token to firewall",
            "description": null
        },
        {
            "id": "tokenauth-create-token-handler-class",
            "name": "TokenAuth: Create token handler class",
            "description": null
        },
        {
            "id": "tokenauth-fill-in-handler-logic",
            "name": "TokenAuth: Fill in handler logic",
            "description": null
        },
        {
            "id": "tokenauth-also-check-expired",
            "name": "TokenAuth: Also check expired",
            "description": null
        },
        {
            "id": "tokenauth-add-authorization-to-swagger",
            "name": "TokenAuth: Add authorization to swagger",
            "description": null
        },
        {
            "id": "bearer-creating-openapifactory-decorator",
            "name": "Bearer: creating OpenApiFactory decorator",
            "description": null
        },
        {
            "id": "bearer-complete-decoration",
            "name": "Bearer: complete decoration",
            "description": null
        },
        {
            "id": "bearer-add-bearer-security-scheme",
            "name": "Bearer: add Bearer security scheme",
            "description": null
        },
        {
            "id": "bearer-remove-old-one-in-config",
            "name": "Bearer: remove old one in config",
            "description": null
        },
        {
            "id": "scopes-add-code-to-user-for-scopes",
            "name": "Scopes: Add code to User for scopes",
            "description": null
        },
        {
            "id": "scopes-call-user-markastokenauthenticated-in-handler",
            "name": "Scopes: Call $user->markAsTokenAuthenticated() in handler",
            "description": null
        }
    ],
    "sha": "4d25c55dddab2668ce9d43d1ea60a070769e6c2d"
}