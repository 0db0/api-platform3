{
    "steps": [
        {
            "id": "start",
            "name": "start",
            "description": null
        },
        {
            "id": "customfieldstateprovider-remove-ismine-from-normalizer",
            "name": "CustomFieldStateProvider: remove isMine from normalizer",
            "description": null
        },
        {
            "id": "customfieldstateprovider-add-isownedbyauthenticateduser-property",
            "name": "CustomFieldStateProvider: Add isOwnedByAuthenticatedUser property",
            "description": null
        },
        {
            "id": "customfieldstateprovider-tightening-up-getter-setter",
            "name": "CustomFieldStateProvider: Tightening up getter\/setter",
            "description": null
        },
        {
            "id": "customfieldstateprovider-exposing-in-the-api",
            "name": "CustomFieldStateProvider: Exposing in the API",
            "description": null
        },
        {
            "id": "customfieldstateprovider-make-state-provider",
            "name": "CustomFieldStateProvider: make:state-provider",
            "description": null
        },
        {
            "id": "customfieldstateprovider-add-dd",
            "name": "CustomFieldStateProvider: add dd()",
            "description": null
        },
        {
            "id": "customfieldstateprovider-activate-on-class",
            "name": "CustomFieldStateProvider: Activate on class",
            "description": null
        },
        {
            "id": "customfieldstateprovider-inject-providerinterface",
            "name": "CustomFieldStateProvider: Inject ProviderInterface",
            "description": null
        },
        {
            "id": "customfieldstateprovider-autowire-attribute",
            "name": "CustomFieldStateProvider: #[Autowire] attribute",
            "description": null
        },
        {
            "id": "customfieldstateprovider-set-field-but-hardcoded",
            "name": "CustomFieldStateProvider: Set field, but hardcoded",
            "description": null
        },
        {
            "id": "customfieldstateprovider-set-real-value",
            "name": "CustomFieldStateProvider: Set real value",
            "description": null
        },
        {
            "id": "customfieldstateprovider-dd-again",
            "name": "CustomFieldStateProvider: dd() again",
            "description": null
        },
        {
            "id": "customfieldstateprovider-inject-collection-provider",
            "name": "CustomFieldStateProvider: Inject collection provider",
            "description": null
        },
        {
            "id": "customfieldstateprovider-dd-the-collection-result",
            "name": "CustomFieldStateProvider: dd() the collection result",
            "description": null
        },
        {
            "id": "customfieldstateprovider-set-the-field-on-each-item",
            "name": "CustomFieldStateProvider: set the field on each item",
            "description": null
        },
        {
            "id": "customfieldstateprovider-updating-test",
            "name": "CustomFieldStateProvider: Updating test",
            "description": null
        },
        {
            "id": "customfieldstateprovider-set-field-also-in-processor",
            "name": "CustomFieldStateProvider: Set field also in processor",
            "description": null
        },
        {
            "id": "delete-me-1",
            "name": "delete me 1",
            "description": null
        },
        {
            "id": "publishprocessor-add-test-for-publishing",
            "name": "PublishProcessor: Add test for publishing",
            "description": null
        },
        {
            "id": "publishprocessor-make-field-writable",
            "name": "PublishProcessor: make field writable",
            "description": null
        },
        {
            "id": "publishprocessor-rename-existing-processor",
            "name": "PublishProcessor: rename existing processor",
            "description": null
        },
        {
            "id": "publishprocessor-change-to-autowire",
            "name": "PublishProcessor: change to #[Autowire]",
            "description": null
        },
        {
            "id": "publishprocessor-set-processor-on-resource",
            "name": "PublishProcessor: set processor on resource",
            "description": null
        },
        {
            "id": "publishprocessor-remove-conditional-code",
            "name": "PublishProcessor: remove conditional code",
            "description": null
        },
        {
            "id": "publishprocessor-return-from-processor",
            "name": "PublishProcessor: Return from processor",
            "description": null
        },
        {
            "id": "publishprocessor-dump-context",
            "name": "PublishProcessor: dump($context)",
            "description": null
        },
        {
            "id": "publishprocessor-check-for-publish-change",
            "name": "PublishProcessor: check for publish change",
            "description": null
        },
        {
            "id": "publishprocessor-test-for-notification",
            "name": "PublishProcessor: Test for Notification",
            "description": null
        },
        {
            "id": "publishprocessor-create-notification",
            "name": "PublishProcessor: Create Notification",
            "description": null
        },
        {
            "id": "dto-create-the-class",
            "name": "DTO: Create the class",
            "description": null
        },
        {
            "id": "dto-add-id",
            "name": "DTO: Add id",
            "description": null
        },
        {
            "id": "dto-remove-apiresource-from-entity",
            "name": "DTO: Remove ApiResource from entity",
            "description": null
        },
        {
            "id": "dto-give-userdto-shortname",
            "name": "DTO: Give UserDto shortName",
            "description": null
        },
        {
            "id": "stateoptions-set-provider-to-orm-collection",
            "name": "StateOptions: set provider to orm collection",
            "description": null
        },
        {
            "id": "stateoptions-add-stateoptions",
            "name": "StateOptions: Add stateOptions",
            "description": null
        },
        {
            "id": "delete-me-2",
            "name": "delete me 2",
            "description": null
        },
        {
            "id": "stateoptions-add-more-fields",
            "name": "StateOptions: Add more fields",
            "description": null
        },
        {
            "id": "stateoptions-remove-the-provider-option",
            "name": "StateOptions: remove the provider option",
            "description": null
        },
        {
            "id": "stateoptions-add-non-existent-field",
            "name": "StateOptions: Add non-existent field",
            "description": null
        },
        {
            "id": "stateoptions-remove-non-existent-field",
            "name": "StateOptions: Remove non-existent field",
            "description": null
        },
        {
            "id": "stateoptions-add-dragontreasures",
            "name": "StateOptions: Add dragonTreasures",
            "description": null
        },
        {
            "id": "stateoptions-add-phpdoc-for-collection",
            "name": "StateOptions: Add phpdoc for Collection",
            "description": null
        },
        {
            "id": "stateoptions-set-paginationitemsperpage",
            "name": "StateOptions: Set paginationItemsPerPage",
            "description": null
        },
        {
            "id": "stateoptions-add-a-filter",
            "name": "StateOptions: Add a filter",
            "description": null
        },
        {
            "id": "delete-me-3",
            "name": "delete me 3",
            "description": null
        },
        {
            "id": "delete-me-4",
            "name": "delete me 4",
            "description": null
        },
        {
            "id": "dtoprovider-create-state-provider",
            "name": "DtoProvider: Create state provider",
            "description": null
        },
        {
            "id": "dtoprovider-return-1-userapi-object",
            "name": "DtoProvider: Return 1 UserApi object",
            "description": null
        },
        {
            "id": "dtoprovider-set-id",
            "name": "DtoProvider: set id",
            "description": null
        },
        {
            "id": "dtoprovider-add-identifier",
            "name": "DtoProvider: Add identifier",
            "description": null
        },
        {
            "id": "dtoprovider-show-null-values",
            "name": "DtoProvider: Show null values",
            "description": null
        },
        {
            "id": "dtoprovider-comment-out-null-value-config",
            "name": "DtoProvider: Comment-out null value config",
            "description": null
        },
        {
            "id": "providerlogic-query-and-map-to-dto",
            "name": "ProviderLogic: Query & Map to DTO",
            "description": null
        },
        {
            "id": "providerlogic-dump-the-iterator",
            "name": "ProviderLogic: dump the iterator",
            "description": null
        },
        {
            "id": "providerlogic-map-entities-to-dtos",
            "name": "ProviderLogic: Map entities to DTOs",
            "description": null
        },
        {
            "id": "providerlogic-add-a-custom-field",
            "name": "ProviderLogic: Add a custom field",
            "description": null
        },
        {
            "id": "providerlogic-temporarily-return-entities",
            "name": "ProviderLogic: Temporarily return entities",
            "description": null
        },
        {
            "id": "providerlogic-return-dtos-again",
            "name": "ProviderLogic: Return DTOs again",
            "description": null
        },
        {
            "id": "providerlogic-return-traversablepaginator",
            "name": "ProviderLogic: Return TraversablePaginator",
            "description": null
        },
        {
            "id": "providerlogic-check-for-collectionoperationinterface",
            "name": "ProviderLogic: Check for CollectionOperationInterface",
            "description": null
        },
        {
            "id": "providerlogic-using-core-itemprovider",
            "name": "ProviderLogic: Using core ItemProvider",
            "description": null
        },
        {
            "id": "providerlogic-only-use-published-treasures",
            "name": "ProviderLogic: Only use published treasures",
            "description": null
        },
        {
            "id": "providerlogic-change-to-array-values",
            "name": "ProviderLogic: change to array values",
            "description": null
        },
        {
            "id": "dtoprocessor-add-dump-in-test",
            "name": "DtoProcessor: add dump() in test",
            "description": null
        },
        {
            "id": "dtoprocessor-hardcode-id-temporarily",
            "name": "DtoProcessor: Hardcode id temporarily",
            "description": null
        },
        {
            "id": "dtoprocessor-remove-tmp-code",
            "name": "DtoProcessor: remove tmp code",
            "description": null
        },
        {
            "id": "dtoprocessor-make-state-processor",
            "name": "DtoProcessor: Make state-processor",
            "description": null
        },
        {
            "id": "dtoprocessor-add-processor-mapping-logic",
            "name": "DtoProcessor: add processor mapping logic",
            "description": null
        },
        {
            "id": "dtoprocessor-save-in-processor",
            "name": "DtoProcessor: Save in processor",
            "description": null
        },
        {
            "id": "delete-me-5",
            "name": "delete me 5",
            "description": null
        },
        {
            "id": "dtoprocessor-set-id-on-dto",
            "name": "DtoProcessor: set id on DTO",
            "description": null
        },
        {
            "id": "delete-me-6",
            "name": "delete me 6",
            "description": null
        },
        {
            "id": "dtoprocessor-also-delete-in-processor",
            "name": "DtoProcessor: Also delete in processor",
            "description": null
        },
        {
            "id": "dtoprocessor-add-in-password-hashing",
            "name": "DtoProcessor: Add in password hashing",
            "description": null
        },
        {
            "id": "controllerfields-test-that-id-is-not-included",
            "name": "ControlFields: test that id is not included",
            "description": null
        },
        {
            "id": "controllerfields-set-readable-false",
            "name": "ControlFields: Set readable: false",
            "description": null
        },
        {
            "id": "controllerfields-repeat-for-id",
            "name": "ControlFields: Repeat for id",
            "description": null
        },
        {
            "id": "controllerfields-change-patch-test-to-use-dto",
            "name": "ControlFields: change PATCH test to use DTO",
            "description": null
        },
        {
            "id": "controllerfields-add-temp-prop",
            "name": "ControlFields: add temp prop",
            "description": null
        },
        {
            "id": "controllerfields-showing-read-write-in-test",
            "name": "ControlFields: showing read\/write in test",
            "description": null
        },
        {
            "id": "controllerfields-readable-false",
            "name": "ControlFields: readable: false",
            "description": null
        },
        {
            "id": "controllerfields-writable-false",
            "name": "ControlFields: writable: false",
            "description": null
        },
        {
            "id": "controllerfields-ignored-attributes-for-normalization",
            "name": "ControlFields: IGNORED_ATTRIBUTES for normalization",
            "description": null
        },
        {
            "id": "controllerfields-now-for-denormalization",
            "name": "ControlFields: Now for denormalization",
            "description": null
        },
        {
            "id": "controllerfields-ignore",
            "name": "ControlFields: #[Ignore]",
            "description": null
        },
        {
            "id": "controllerfields-reset-tmp-code",
            "name": "ControlFields: Reset tmp code",
            "description": null
        },
        {
            "id": "controllerfields-try-sending-id",
            "name": "ControlFields: Try sending id",
            "description": null
        },
        {
            "id": "controllerfields-try-writable-false",
            "name": "ControlFields: Try writable: false",
            "description": null
        },
        {
            "id": "controllerfields-try-readonly",
            "name": "ControlFields: Try readonly",
            "description": null
        },
        {
            "id": "controllerfields-remove-constructor",
            "name": "ControlFields: Remove constructor",
            "description": null
        },
        {
            "id": "controllerfields-use-isset-for-id",
            "name": "ControlFields: use isset() for id",
            "description": null
        },
        {
            "id": "automapper-install-jane-automapper",
            "name": "AutoMapper: install jane automapper",
            "description": null
        },
        {
            "id": "automapper-playing-with-jane-to-delete",
            "name": "AutoMapper: Playing with jane - to delete",
            "description": null
        }
    ],
    "sha": "0bbeb39c274df9bcf9d15226935d67c77e0b8bef"
}