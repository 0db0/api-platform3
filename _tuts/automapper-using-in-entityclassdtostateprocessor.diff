diff --git a/src/State/EntityClassDtoStateProcessor.php b/src/State/EntityClassDtoStateProcessor.php
index 16541455..8280188a 100644
--- a/src/State/EntityClassDtoStateProcessor.php
+++ b/src/State/EntityClassDtoStateProcessor.php
@@ -9,6 +9,7 @@ use ApiPlatform\Metadata\Operation;
 use ApiPlatform\State\ProcessorInterface;
 use App\ApiResource\UserApi;
 use App\Entity\User;
+use App\MicroMapper\AutoMapper;
 use App\Repository\UserRepository;
 use Symfony\Component\DependencyInjection\Attribute\Autowire;
 use Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface;
@@ -20,6 +21,7 @@ class EntityClassDtoStateProcessor implements ProcessorInterface
         #[Autowire(service: PersistProcessor::class)] private ProcessorInterface $persistProcessor,
         #[Autowire(service: RemoveProcessor::class)] private ProcessorInterface $removeProcessor,
         private UserPasswordHasherInterface $userPasswordHasher,
+        private AutoMapper $autoMapper
     )
     {
 
@@ -45,24 +47,6 @@ class EntityClassDtoStateProcessor implements ProcessorInterface
 
     private function mapDtoToEntity(object $dto): object
     {
-        assert($dto instanceof UserApi);
-        if ($dto->id) {
-            $entity = $this->userRepository->find($dto->id);
-
-            if (!$entity) {
-                throw new \Exception(sprintf('Entity %d not found', $dto->id));
-            }
-        } else {
-            $entity = new User();
-        }
-
-        $entity->setEmail($dto->email);
-        $entity->setUsername($dto->username);
-        if ($dto->password) {
-            $entity->setPassword($this->userPasswordHasher->hashPassword($entity, $dto->password));
-        }
-        // TODO: handle dragon treasures
-
-        return $entity;
+        return $this->autoMapper->map($dto, User::class);
     }
 }
