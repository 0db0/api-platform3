diff --git a/src/ApiResource/DragonTreasureApi.php b/src/ApiResource/DragonTreasureApi.php
index cd952f5..ddd3593 100644
--- a/src/ApiResource/DragonTreasureApi.php
+++ b/src/ApiResource/DragonTreasureApi.php
@@ -25,4 +25,6 @@ class DragonTreasureApi
     public ?string $name = null;
 
     public ?UserApi $owner = null;
+
+    public ?string $description = null;
 }
diff --git a/src/Automapper/DragonTreasureApiToDragonTreasureMapperConfiguration.php b/src/Automapper/DragonTreasureApiToDragonTreasureMapperConfiguration.php
new file mode 100644
index 0000000..2ab3379
--- /dev/null
+++ b/src/Automapper/DragonTreasureApiToDragonTreasureMapperConfiguration.php
@@ -0,0 +1,53 @@
+<?php
+
+namespace App\Automapper;
+
+use App\ApiResource\DragonTreasureApi;
+use App\ApiResource\UserApi;
+use App\Entity\DragonTreasure;
+use App\Entity\User;
+use App\Repository\UserRepository;
+use Jane\Bundle\AutoMapperBundle\Configuration\MapperConfigurationInterface;
+use Jane\Component\AutoMapper\AutoMapperInterface;
+use Jane\Component\AutoMapper\MapperGeneratorMetadataInterface;
+use Jane\Component\AutoMapper\MapperMetadata;
+use Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface;
+
+class DragonTreasureApiToDragonTreasureMapperConfiguration implements MapperConfigurationInterface
+{
+    public function __construct(
+        private AutoMapperInterface $autoMapper,
+        private UserRepository $userRepository,
+    )
+    {
+
+    }
+
+    public function process(MapperGeneratorMetadataInterface $metadata): void
+    {
+        assert($metadata instanceof MapperMetadata);
+
+        $metadata->forMember('owner', function (DragonTreasureApi $dto, DragonTreasure $entity) {
+            if (!$dto->owner) {
+                return null;
+            }
+
+            $user = $this->userRepository->find($dto->owner->id);
+            if (!$user) {
+                throw new \Exception(sprintf('User %d not found', $dto->owner->id));
+            }
+
+            return $this->autoMapper->map($dto->owner, $user);
+        });
+    }
+
+    public function getSource(): string
+    {
+        return DragonTreasureApi::class;
+    }
+
+    public function getTarget(): string
+    {
+        return DragonTreasure::class;
+    }
+}
