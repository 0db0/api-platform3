diff --git a/src/ApiResource/UserApi.php b/src/ApiResource/UserApi.php
index 0e8fb3e..2a74f8c 100644
--- a/src/ApiResource/UserApi.php
+++ b/src/ApiResource/UserApi.php
@@ -22,6 +22,11 @@ class UserApi
 
     public ?string $username = null;
 
+    /**
+     * The plaintext password when being set or changed.
+     */
+    public ?string $password = null;
+
     /**
      * @var DragonTreasure[]
      */
diff --git a/src/State/UserApiStateProcessor.php b/src/State/UserApiStateProcessor.php
index 3d46bfd..a895483 100644
--- a/src/State/UserApiStateProcessor.php
+++ b/src/State/UserApiStateProcessor.php
@@ -9,12 +9,14 @@ use App\ApiResource\UserApi;
 use App\Entity\User;
 use App\Repository\UserRepository;
 use Doctrine\ORM\EntityManagerInterface;
+use Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface;
 
 class UserApiStateProcessor implements ProcessorInterface
 {
     public function __construct(
         private UserRepository $userRepository,
-        private EntityManagerInterface $entityManager
+        private EntityManagerInterface $entityManager,
+        private UserPasswordHasherInterface $userPasswordHasher,
     )
     {
 
@@ -55,7 +57,10 @@ class UserApiStateProcessor implements ProcessorInterface
 
         $user->setEmail($userApi->email);
         $user->setUsername($userApi->username);
-        $user->setPassword('TODO properly');
+        if ($userApi->password) {
+            $user->setPassword($this->userPasswordHasher->hashPassword($user, $userApi->password));
+        }
+
         // TODO: handle dragon treasures
 
         return $user;
