diff --git a/src/ApiResource/UserApi.php b/src/ApiResource/UserApi.php
index fa01e2e..45d7ded 100644
--- a/src/ApiResource/UserApi.php
+++ b/src/ApiResource/UserApi.php
@@ -31,6 +31,11 @@ class UserApi
 
     public ?string $username = null;
 
+    /**
+     * The plaintext password when being set or changed.
+     */
+    public ?string $password = null;
+
     /**
      * @var DragonTreasure[]
      */
diff --git a/src/State/UserApiStateProcessor.php b/src/State/UserApiStateProcessor.php
index 5c53641..f625736 100644
--- a/src/State/UserApiStateProcessor.php
+++ b/src/State/UserApiStateProcessor.php
@@ -10,7 +10,9 @@ use ApiPlatform\State\ProcessorInterface;
 use App\ApiResource\UserApi;
 use App\Entity\User;
 use App\Repository\UserRepository;
+use Doctrine\ORM\EntityManagerInterface;
 use Symfony\Component\DependencyInjection\Attribute\Autowire;
+use Symfony\Component\PasswordHasher\Hasher\UserPasswordHasherInterface;
 
 class UserApiStateProcessor implements ProcessorInterface
 {
@@ -18,6 +20,7 @@ class UserApiStateProcessor implements ProcessorInterface
         private UserRepository $userRepository,
         #[Autowire(service: PersistProcessor::class)] private ProcessorInterface $persistProcessor,
         #[Autowire(service: RemoveProcessor::class)] private ProcessorInterface $removeProcessor,
+        private UserPasswordHasherInterface $userPasswordHasher,
     )
     {
 
@@ -55,7 +58,10 @@ class UserApiStateProcessor implements ProcessorInterface
 
         $user->setEmail($userApi->email);
         $user->setUsername($userApi->username);
-        $user->setPassword('TODO properly');
+        if ($userApi->password) {
+            $user->setPassword($this->userPasswordHasher->hashPassword($user, $userApi->password));
+        }
+
         // TODO: handle dragon treasures
 
         return $user;
