diff --git a/src/Validator/TreasuresAllowedOwnerChange.php b/src/Validator/TreasuresAllowedOwnerChange.php
new file mode 100644
index 0000000..2ae61c4
--- /dev/null
+++ b/src/Validator/TreasuresAllowedOwnerChange.php
@@ -0,0 +1,20 @@
+<?php
+
+namespace App\Validator;
+
+use Symfony\Component\Validator\Constraint;
+
+/**
+ * @Annotation
+ *
+ * @Target({"PROPERTY", "METHOD", "ANNOTATION"})
+ */
+#[\Attribute(\Attribute::TARGET_PROPERTY | \Attribute::TARGET_METHOD | \Attribute::IS_REPEATABLE)]
+class TreasuresAllowedOwnerChange extends Constraint
+{
+    /*
+     * Any public properties become valid options for the annotation.
+     * Then, use these in your validator class.
+     */
+    public string $message = 'One of the treasures illegally changed owners.';
+}
diff --git a/src/Validator/TreasuresAllowedOwnerChangeValidator.php b/src/Validator/TreasuresAllowedOwnerChangeValidator.php
new file mode 100644
index 0000000..2f81f1e
--- /dev/null
+++ b/src/Validator/TreasuresAllowedOwnerChangeValidator.php
@@ -0,0 +1,23 @@
+<?php
+
+namespace App\Validator;
+
+use Symfony\Component\Validator\Constraint;
+use Symfony\Component\Validator\ConstraintValidator;
+
+class TreasuresAllowedOwnerChangeValidator extends ConstraintValidator
+{
+    public function validate($value, Constraint $constraint)
+    {
+        /* @var App\Validator\TreasuresAllowedOwnerChange $constraint */
+
+        if (null === $value || '' === $value) {
+            return;
+        }
+
+        // TODO: implement the validation here
+        $this->context->buildViolation($constraint->message)
+            ->setParameter('{{ value }}', $value)
+            ->addViolation();
+    }
+}
